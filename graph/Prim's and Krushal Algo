  Krushkal's algo
        1. First sort all the edges by their weight
        2. Keep picking up the edges and do the union of nodes
        3. If nodes are already in the same union, ignore the edge, it will create cycle
        4. Repeat above steps till N-1 edges are picked up

            Time complexity: ElogE (Getting N-1 edges)+ Ealpha(V) (Union and find operations)
            Space complexity: E(Queue)+N(union find ds)
 Prim's algo
        1. Pick up the first vertex
        2. Add all the negibours in the priority queue to sort by weight like (node, weight)
        3. Loop in the queue till its not empty and all the nodes are NOT visted
        4. Poll the first edge, mark it visited and increase noOfNodes++
        5. Add the new negbours like (node, weight)
        6. Repeat from 3

        Time complexity: ElogV
        Space Complexity: E
        
        
        
        
